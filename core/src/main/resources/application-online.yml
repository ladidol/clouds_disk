server:
  port: 8088
spring:
  application:
    name: cloud-disk-service
  profiles:
    active: dev
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://数据库ip地址:3306/cloud_disk?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
    username: #账号 一般是root
    password: #密码
    druid:
      initialSize: 10   #初始化连接个数
      minIdle: 10       #最小空闲连接个数
      maxActive: 100    #最大连接个数
      maxWait: 60000    #获取连接时最大等待时间，单位毫秒。
      timeBetweenEvictionRunsMillis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 30000     #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: select 'x' #用来检测连接是否有效的sql，要求是一个查询语句。
      testWhileIdle: true       #建议配置为true，不影响性能，并且保证安全性。如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testOnBorrow: true        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false       #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      poolPreparedStatements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      maxPoolPreparedStatementPerConnectionSize: -1 #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      filters: stat,wall #通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat，日志用的filter:log4j，防御sql注入的filter:wall
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      useGlobalDataSourceStat: false # 合并多个DruidDataSource的监控数据
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  cache:
    type: redis
  redis:
    host: 127.0.0.1 #redis地址
    port: 6379 #redis端口号
    password: #redis密码
    database: 1
    lettuce:
      pool:
        max-active: 100
        max-wait: -1ms # 连接池最大阻塞等待时间，负值表示没有限制
        max-idle: 8
  servlet:
    multipart:
      max-file-size: 300MB
      max-request-size: 350MB
  mail:
    # SMTP服务器域名
    host: smtp.qq.com
    # 编码集
    default-encoding: UTF-8
    # 邮箱用户名
    username: # qq邮箱
    # 授权码(注意不是邮箱密码！)
    password: # qq邮箱授权码
    # 协议：smtps
    protocol: smtps
    # 详细配置
    properties:
      mail:
        smtp:
          # 设置是否需要认证,如果为true,那么用户名和密码就必须的,
          # 如果设置false,可以不设置用户名和密码
          # (前提要知道对接的平台是否支持无密码进行访问的)
          auth: true
          # STARTTLS[1]  是对纯文本通信协议的扩展。
          # 它提供一种方式将纯文本连接升级为加密连接（TLS或SSL）
          # 而不是另外使用一个端口作加密通信。
          starttls:
            enable: true
            required: true





mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:com/feng/mapper/*/xml/*.xml
  type-aliases-package: com.feng.entity
logging:
  level:
    #    root: WARN
    root: INFO

jwt:
  #设置token的过期时间，单位为秒
  token-expired-time: 36000 #10小时
  #设置token的id
  id: tokenId
  #设置密钥
  secret: kho2x9DvkuEfNtGcrd5QxjidPsaS3F6Tfx4phS96Y1YjDOJhXEAKtFVegr9Mqqnt

#阿里云OSS配置
aliyun:
  oss:
    file:
      #地域节点参数
      endpoint:
      #自己的AccessKey id和密钥参数
      keyId:
      keySecret:
      #bucket参数 可以在控制台创建，也可以使用java代码创建
      bucketName: